name: Nightly Build

on:
  schedule:
    # Run at 2 AM UTC every day
    - cron: '0 2 * * *'
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch: # Allow manual triggering

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release, Debug]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Vulkan SDK (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
        sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-jammy.list https://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.list
        sudo apt update
        sudo apt install -y vulkan-sdk
        # Install additional dependencies
        sudo apt install -y \
          build-essential \
          cmake \
          libsdl2-dev \
          libglm-dev \
          git

    - name: Setup Vulkan SDK (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        $VulkanSDK = "1.3.268.0"
        $Installer = "VulkanSDK-$VulkanSDK-Installer.exe"
        $InstallerUrl = "https://sdk.lunarg.com/sdk/download/$VulkanSDK/windows/$Installer"
        
        echo "Downloading Vulkan SDK..."
        Invoke-WebRequest -Uri $InstallerUrl -OutFile $Installer
        
        echo "Installing Vulkan SDK..."
        Start-Process -FilePath $Installer -ArgumentList "--accept-licenses --default-answer --confirm-command install" -Wait
        
        # Add Vulkan SDK to environment
        $VulkanPath = "C:\VulkanSDK\$VulkanSDK"
        echo "$VulkanPath\Bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "VULKAN_SDK=$VulkanPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      shell: powershell

    - name: Configure CMake
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Build
      run: |
        cmake --build build --config ${{ matrix.build_type }} --parallel

    - name: Test Build Output
      run: |
        ls -la bin/ || dir bin\
      shell: bash

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: vk-fiddle-${{ matrix.os }}-${{ matrix.build_type }}
        path: |
          bin/
          shaders/*.spv
        retention-days: 30

